// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyDepartment.Server.Context;

namespace StudyDepartment.Domain.Migrations
{
    [DbContext(typeof(StudyDepartmentContext))]
    partial class StudyDepartmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("StudyDepartment.Server.Model.ExamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExamTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Экзамен"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Зачет"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Зачет с оценкой"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Курсовая"
                        });
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.Jurnal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MarkId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudyPlanId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.HasIndex("StudentId");

                    b.HasIndex("StudyPlanId");

                    b.ToTable("Jurnals");
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Marks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Отлично",
                            Value = "5"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Хорошо",
                            Value = "4"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Удовлетворительно",
                            Value = "3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Неудовлетворительно",
                            Value = "2"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Зачет",
                            Value = "з"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Незачет",
                            Value = "н"
                        },
                        new
                        {
                            Id = 7,
                            Name = "НЕявка",
                            Value = ""
                        });
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudyGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudyGroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.StudyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StudyGroups");
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.StudyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExamTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudyPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExamTypeId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExamTypeId = 4,
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 3,
                            ExamTypeId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            Id = 4,
                            ExamTypeId = 1,
                            SubjectId = 3
                        },
                        new
                        {
                            Id = 5,
                            ExamTypeId = 2,
                            SubjectId = 4
                        },
                        new
                        {
                            Id = 6,
                            ExamTypeId = 1,
                            SubjectId = 5
                        },
                        new
                        {
                            Id = 7,
                            ExamTypeId = 2,
                            SubjectId = 6
                        },
                        new
                        {
                            Id = 8,
                            ExamTypeId = 1,
                            SubjectId = 7
                        });
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Проектирование информационных систем",
                            ShortName = "ПрИС"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Системы искусственного интеллекта",
                            ShortName = "СИИ"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Программная инженерия",
                            ShortName = "ПИ"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Национальная система информационной безопасности",
                            ShortName = "НСИБ"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Системный анализ",
                            ShortName = "СисАнал"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Распределенные базы данных",
                            ShortName = "РБД"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Системное программное обеспечение",
                            ShortName = "СПО"
                        });
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.Jurnal", b =>
                {
                    b.HasOne("StudyDepartment.Server.Model.Mark", "Mark")
                        .WithMany()
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyDepartment.Server.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyDepartment.Server.Model.StudyPlan", "StudyPlan")
                        .WithMany()
                        .HasForeignKey("StudyPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.Student", b =>
                {
                    b.HasOne("StudyDepartment.Server.Model.StudyGroup", "StudyGroup")
                        .WithMany()
                        .HasForeignKey("StudyGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudyDepartment.Server.Model.StudyPlan", b =>
                {
                    b.HasOne("StudyDepartment.Server.Model.ExamType", "ExamType")
                        .WithMany()
                        .HasForeignKey("ExamTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudyDepartment.Server.Model.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
